digraph G {
  node [shape=box];

  subgraph cluster1 {
    label = "client";

    subgraph cluster11 {
      label = "Configuring";

      savingPlayerId [label = "savingPlayerId\nenter: save playerId\nenter: send(PlayerIdCnf)"];
      requestingName_client [label = "requestingName\nenter: configurationRequest"];
      sendingName_client [label = "sendingName\nenter: send(PlayerNameCfg)"];
      savingPlayerName_client [label = "savingPlayerName\nenter: save playerName\nenter: send(PlayerNameCnf)"];

      receivingPlayerId -> savingPlayerId [label = "received: PlayerIdCfg"];
      savingPlayerId -> requestingName_client;
      requestingName_client -> sendingName_client [label = "configurationResponse"];
      sendingName_client -> receivingPlayerName;
      receivingPlayerName -> savingPlayerName_client [label = "received: PlayerNameCfg"];
      savingPlayerName_client -> receivingPlayerName;
    }

    receivingPlayerName -> TBI_client [label = "received: startDraft"];
    waitingForConnection -> receivingPlayerId [label = "connectedToDraft"];
  }

  subgraph cluster2 {
    label = "Server";

    listeningForConnections [label = "listeningForConnections\nclientConnected: create ClientStateMachine for client"];

    subgraph cluster21 {
      label = "ClientStateMachine";
  
      subgraph cluster211 {
        label = "Configuring";

	sendingPlayerId [label = "sendingPlayerId\nenter: send(PlayerIdCfg)"];
 	savingPlayerName_server [label = "savingPlayerName\nenter: save received name\nenter: send PlayerNameCnf"];
	waitingForOtherPlayers;
 	forwardingPlayerName [label = "forwardingPlayerName\nenter: send(PlayerNameCfg)"];

	sendingPlayerId -> receivingClientName [label = "received: PlayerIdCnf"];
	receivingClientName -> savingPlayerName_server [label = "received: PlayerNameCfg"];
	savingPlayerName_server -> waitingForOtherPlayers;
	waitingForOtherPlayers -> forwardingPlayerName [label = "playerConnected"];
	forwardingPlayerName -> waitingForOtherPlayers [label = "received: PlayerNameCnf"];
      }
    } 

    listeningForConnections -> sendingPlayerId [style=dotted, label = "clientConnected"];
    waitingForOtherPlayers -> TBI_server [label = "startDraft"];
  }

  null [shape = plaintext label=""];
  null -> chooseClientOrServer;
  chooseClientOrServer -> waitingForConnection [label = "connectToDraft"];
  chooseClientOrServer -> listeningForConnections [label = "hostDraft"];
}
